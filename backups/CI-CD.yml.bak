name: Continuous Integration and Continuous Delivery (CI/CD)

on:
  push:
    branches:
      - main
    paths:
      - "scacchi/**"
      - "tests/**"
      - "pyproject.toml"
      - ".github/workflows/**"

jobs:
  continuous-integration:
    name: Continuous Integration
    uses: ./.github/workflows/CI.yml

  continuous-delivery:
    name: Continuous Delivery
    runs-on: ubuntu-latest
    needs: continuous-integration

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}
          ecr: auto
          logout: true

      - name: Define image tag
        id: define_img_tag
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository_owner }}/test-docker-app
          IMAGE_TAG=$(echo "$IMAGE_TAG" | tr "[:upper:]" "[:lower:]")
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Debug info
        run: |
            echo "Repository: ${{ github.repository }}"
            echo "Owner: ${{ github.repository_owner }}"
            echo "Token permissions available: yes" 

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.define_img_tag.outputs.image_tag }}:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

  publish_updated_docs:
    name: Publish updated documentation
    runs-on: ubuntu-latest
    needs: continuous-delivery

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        # Install the uv Python package manager
        # It leverages uv's cache to make runs faster;
        # the chache is invalidated when uv.lock changes
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          # python-version-file: ".python-version"
      
      - name: Install the dev dependencies of the project
        run: uv sync --only-group docs

      # - name: Set up git user
      #   run: |
      #     git config --global user.name "GitHub Actions"
      #     git config --global user.email "actions@github.com"

      - name: Build the docs
        run: uv run mkdocs build

      - name: Deploy the docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          publish_dir: ./site
