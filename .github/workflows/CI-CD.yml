name: Continuous Integration and Continuous Delivery (CI/CD)

on:
  push:
    branches:
      - main
    paths:
      - "scacchi/**"
      - "tests/**"
      - "pyproject.toml"
      - ".github/workflows/**"

jobs:
  continuous-integration:
    name: Continuous Integration
    uses: ./.github/workflows/CI.yml

  continuous-delivery:
    name: Continuous Delivery
    runs-on: ubuntu-latest
    needs: continuous-integration
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Disabilitiamo buildx e usiamo il Docker standard
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      # Verifichiamo la presenza del Dockerfile
      - name: Check Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Error: Dockerfile not found in repository root"
            exit 1
          fi
          echo "Dockerfile found"

      # Utilizziamo i comandi Docker nativi invece di buildx
      - name: Build Docker image
        run: |
          REPO_NAME=$(echo "${{ github.repository_owner }}/test-docker-app" | tr '[:upper:]' '[:lower:]')
          docker build -t ghcr.io/$REPO_NAME:latest .
          echo "Built image: ghcr.io/$REPO_NAME:latest"

      - name: Push Docker image
        run: |
          REPO_NAME=$(echo "${{ github.repository_owner }}/test-docker-app" | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/$REPO_NAME:latest
          echo "Pushed image: ghcr.io/$REPO_NAME:latest"

  publish_updated_docs:
    name: Publish updated documentation
    runs-on: ubuntu-latest
    needs: continuous-delivery

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install the dev dependencies of the project
        run: uv sync --only-group docs

      - name: Build the docs
        run: uv run mkdocs build

      - name: Deploy the docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          publish_dir: ./site